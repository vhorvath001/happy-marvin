<templates>
	<template name="POJO" type="Java">
		<!-- additionalArtefactsToBeGenerated: after generating the POJO class the generator will look at the artefactsToBeGenerated and it realizes that a UnitTest should be generated => 
		        it tries to find a template names POJO_UnitTest.ftl -->
		<file extension="java" path="Java/POJO/class.ftl" additionalArtefactsToBeGenerated="UnitTest"/>
		<property name="method_Java_POJO" text="METHOD" mandatory="true">
			<!-- The [] means that the word is not mandatory -->
			<!-- not case-sensitive: add or Add -->
			<textDef>[Please ]add a method[ to it]: '${method_Java_POJO}'[.]</textDef>
			<textDef>[Please ]add a method to[ the] [component]/[class]: '${method_Java_POJO}'[.]</textDef>
			<textDef>[A ]method [is ]needed: '${method_Java_POJO}'.</textDef>
		</property>
	</template>
	
	<template name="JSR303Validator" type="Java">
		<file name="validator" extension="java" path="Java/JSR303Validator/validator.ftl" suffix="Validator" additionalArtefactsToBeGenerated="UnitTest"/>
		<file name="constraint" extension="java" path="Java/JSR303Validator/constraint.ftl" suffix="Constraint"/>
		<file name="configXML" extension="xml" path="Java/JSR303Validator/configXML.ftl"/>
		<!-- the text attribute of the property is used when the instructions are defined in JIRA description as key-value pairs -->
		<property name="location_Java_JSR303Validator_Validator" text="LOCATION_JAVA_JSR303VALIDATOR_VALIDATOR" 
				mandatory="false" locationOf="validator" textfieldLabel="The location of validator">
			<textDef>The [JSR303 ]validator[ class] should be [put to]/[in]/[generated into] '${location_Java_JSR303Validator_Validator}' folder.</textDef>
			<textDef>[Please ]put the [JSR303 ]validator[ class] to [the ]'${location_Java_JSR303Validator_Validator}'[ folder], the [JSR303 ]constraint[ class] to [the ]'${location_Java_JSR303Validator_Constraint}'[ folder] and the [JSR303 ][config]/[configuration] XML[ file] to [the ]'${location_Java_JSR303Validator_configXML}'[ folder].</textDef>
			<textDef>[Please ]put the [JSR303 ]validator[ class] to [the ]'${location_Java_JSR303Validator_Validator}'[ folder].</textDef>
		</property>
		<property name="location_Java_JSR303Validator_Constraint" text="LOCATION_JAVA_JSR303VALIDATOR_CONSTRAINT" 
				mandatory="false" locationOf="constraint" textfieldLabel="The location of constraint">
			<textDef>The [JSR303 ]constraint[ class] should be [put to]/[in]/[generated into] '${location_Java_JSR303Validator_Constraint}' folder.</textDef>
			<textDef>[Please ]put the [JSR303 ]constraint class to [the ]'${location_Java_JSR303Validator_Constraint}'[ folder].</textDef>
		</property>
		<property name="location_Java_JSR303Validator_configXML" text="LOCATION_JAVA_JSR303VALIDATOR_CONFIGXML" 
				mandatory="false" locationOf="configXML" textfieldLabel="The location of config XML">
			<textDef>The [JSR303 ][config]/[configuration] XML[ file] should be [put to]/[in]/[generated into] '${location_Java_JSR303Validator_configXML}' folder.</textDef>
			<textDef>[Please ]put the [JSR303 ][config]/[configuration] XML[ file] to [the ]'${location_Java_JSR303Validator_configXML}'[ folder].</textDef>
		</property>
	</template>

	<template name="EJB_stateless_with_local_remote" type="Java">
		<file name="stateless" extension="java" path="Java/EJB_stateless_with_local_remote/stateless.ftl" suffix="ServiceBean" additionalArtefactsToBeGenerated="UnitTest"/>
		<file name="local" extension="java" path="Java/EJB_stateless_with_local_remote/local.ftl" suffix="ServiceLocal"/>
		<file name="remote" extension="java" path="Java/EJB_stateless_with_local_remote/remote.ftl" suffix="ServiceRemote"/>
		<property name="location_Java_EJB_stateless_with_local_remote_stateless" text="LOCATION_JAVA_EJB_STATELESS_WITH_LOCAL_REMOTE_STATELESS" 
				mandatory="false" locationOf="stateless" textfieldLabel="The location of the stateless bean">
			<textDef>The stateless [bean]/[class] should be [put to]/[in]/[generated into] '${location_Java_EJB_stateless_with_local_remote_stateless}' folder.</textDef>
			<textDef>[Please ]put the stateless [bean]/[class] to [the ]'${location_Java_EJB_stateless_with_local_remote_stateless}'[ folder].</textDef>
			<textDef>[Please ]put the stateless [bean]/[class] to [the ]'${location_Java_EJB_stateless_with_local_remote_stateless}'[ folder], the local interface[ class] to [the ]'${location_Java_EJB_stateless_with_local_remote_local}'[ folder] and the remote [interface]/[component][ class] to [the ]'${location_Java_EJB_stateless_with_local_remote_remote}'[ folder].</textDef>
		</property>
		<property name="location_Java_EJB_stateless_with_local_remote_local" text="LOCATION_JAVA_EJB_STATELESS_WITH_LOCAL_REMOTE_LOCAL" 
				mandatory="false" locationOf="local" textfieldLabel="The location of the local interface">
			<textDef>The local interface[ class] should be [put to]/[in]/[generated into] '${location_Java_EJB_stateless_with_local_remote_local}' folder.</textDef>
			<textDef>[Please ]put the local [interface]/[component][ class] to [the ]'${location_Java_EJB_stateless_with_local_remote_local}'[ folder].</textDef>
		</property>
		<property name="location_Java_EJB_stateless_with_local_remote_remote" text="LOCATION_JAVA_EJB_STATELESS_WITH_LOCAL_REMOTE_REMOTE" 
				mandatory="false" locationOf="remote" textfieldLabel="The location of the remote interface">
			<textDef>The remote interface[ class] should be [put to]/[in]/[generated into] '${location_Java_EJB_stateless_with_local_remote_remote}' folder.</textDef>
			<textDef>[Please ]put the remote [interface]/[component][ class] to [the ]'${location_Java_EJB_stateless_with_local_remote_remote}'[ folder].</textDef>
		</property>
	</template>
	
	<template name="GWT_server" type="Java">
		<file name="clientAsyncInterface" extension="java" path="Java/GWT_server/clientAsyncInterface.ftl" suffix="ServiceAsync"/>
		<file name="clientInterface" extension="java" path="Java/GWT_server/clientAsyncInterface.ftl" suffix="Service"/>
		<file name="server" extension="java" path="Java/GWT_server/server.ftl" suffix="ServiceImpl" additionalArtefactsToBeGenerated="UnitTest"/>
		<property name="method_Java_GWT_server" text="METHOD" mandatory="true">
			<!-- The [] means that the word is not mandatory -->
			<!-- not case-sensitive: add or Add -->
			<textDef>[Please ]add a method[ to it]: '${method_Java_GWT_server}'[.]</textDef>
			<textDef>[Please ]add a method to[ the] [component]/[class]/[server]/[server class]/[interface]: '${method_Java_GWT_server}'[.]</textDef>
			<textDef>[A ]method [is ]needed: '${method_Java_GWT_server}'.</textDef>
		</property>
		<property name="location_Java_GWT_server_clientAsyncInterface" text="LOCATION_CLIENT_ASYNC_INTERFACE" 
				mandatory="false" locationOf="clientAsyncInterface" textfieldLabel="The location of the client async interface">
			<textDef>The[ client] [async]/[asynchronous] interface[ class] should be [put to]/[in]/[generated into] '${location_Java_GWT_server_clientAsyncInterface}' folder.</textDef>
			<textDef>[Please ]put the[ client] [async]/[asynchronous] interface[ class] to [the ]'${location_Java_GWT_server_clientAsyncInterface}'[ folder].</textDef>
			<textDef>[Please ]put the[ client] [async]/[asynchronous] interface to [the ]'${location_Java_GWT_server_clientAsyncInterface}'[ folder], the client interface[ class] to [the ]'${location_Java_GWT_server_clientInterface}'[ folder] and the server[ class] to [the ]'${location_Java_GWT_server_server}'[ folder].</textDef>
		</property>
		<property name="location_Java_GWT_server_clientInterface" text="LOCATION_SERVER_CLIENT_INTERFACE" 
				mandatory="false" locationOf="clientInterface" textfieldLabel="The location of the client interface">
			<textDef>The client interface[ class] should be [put to]/[in]/[generated into] '${location_Java_GWT_server_clientInterface}' folder.</textDef>
			<textDef>[Please ]put the client interface[ class] to [the ]'${location_Java_GWT_server_clientInterface}'[ folder].</textDef>
		</property>
		<property name="location_Java_GWT_server_server" text="LOCATION_SERVER" mandatory="false" locationOf="remote" textfieldLabel="The location of the server class">
			<textDef>The server[ class] should be [put to]/[in]/[generated into] '${location_Java_GWT_server_server}' folder.</textDef>
			<textDef>[Please ]put the server[ class] to [the ]'${location_Java_GWT_server_server}'[ folder].</textDef>
		</property>
	</template>

	<template name="GWT_full" type="Java">
		<file name="clientAsyncInterface" extension="java" path="Java/GWT_full/clientAsyncInterface.ftl" suffix="ServiceAsync"/>
		<file name="clientInterface" extension="java" path="Java/GWT_full/clientAsyncInterface.ftl" suffix="Service"/>
		<file name="server" extension="java" path="Java/GWT_full/server.ftl" suffix="ServiceImpl" additionalArtefactsToBeGenerated="UnitTest"/>
		<file name="ui" extension="java" path="Java/GWT_full/ui.ftl" suffix="Entry" additionalArtefactsToBeGenerated="UnitTest"/>
		<file name="gwtXml" extension="xml" path="Java/GWT_full/gwt.xml.ftl" suffix=".gwt"/>
		<property name="method_Java_GWT_full" text="METHOD" mandatory="true">
			<!-- The [] means that the word is not mandatory -->
			<!-- not case-sensitive: add or Add -->
			<textDef>[Please ]add a method[ to it]: '${method_Java_GWT_full}'[.]</textDef>
			<textDef>[Please ]add a method to[ the] [component]/[class]/[server]/[server class]/[interface]: '${method_Java_GWT_full}'[.]</textDef>
			<textDef>[A ]method [is ]needed: '${method_Java_GWT_full}'.</textDef>
		</property>
		<property name="location_Java_GWT_full_clientAsyncInterface" text="LOCATION_CLIENT_ASYNC_INTERFACE" 
				mandatory="false" locationOf="clientAsyncInterface" textfieldLabel="The location of the client async interface">
			<textDef>The[ client] [async]/[asynchronous] interface[ class] should be [put to]/[in]/[generated into] '${location_Java_GWT_full_clientAsyncInterface}' folder.</textDef>
			<textDef>[Please ]put the[ client] [async]/[asynchronous] interface[ class] to [the ]'${location_Java_GWT_full_clientAsyncInterface}'[ folder].</textDef>
			<textDef>[Please ]put the[ client] [async]/[asynchronous] interface to [the ]'${location_Java_GWT_full_clientAsyncInterface}'[ folder], the client interface[ class] to [the ]'${location_Java_GWT_full_clientInterface}'[ folder] and the server[ class] to [the ]'${location_Java_GWT_full_server}'[ folder].</textDef>
			<textDef>Also[ please] put the [ui]/[user interface]/[gui][ class] to [the ]'${location_Java_GWT_full_ui}'[ folder] and the [GWT XML]/[gwt XML]/[GWT XML][ configuration][ file] to [the ]'${location_Java_GWT_full_gwtXml}'[ folder].</textDef>
			<textDef>[Please ]put the[ client] [async]/[asynchronous] interface to [the ]'${location_Java_GWT_full_clientAsyncInterface}'[ folder], the client interface[ class] to [the ]'${location_Java_GWT_full_clientInterface}'[ folder], the server[ class] to [the ]'${location_Java_GWT_full_server}'[ folder], the [ui]/[user interface]/[gui][ class] to [the ]'${location_Java_GWT_full_ui}'[ folder] and the [GWT XML]/[gwt XML]/[GWT XML][ configuration][ file] to [the ]'${location_Java_GWT_full_gwtXml}'[ folder].</textDef>
		</property>
		<property name="location_Java_GWT_full_clientInterface" text="LOCATION_SERVER_CLIENT_INTERFACE" 
				mandatory="false" locationOf="clientInterface" textfieldLabel="The location of the client interface">
			<textDef>The client interface[ class] should be [put to]/[in]/[generated into] '${location_Java_GWT_full_clientInterface}' folder.</textDef>
			<textDef>[Please ]put the client interface[ class] to [the ]'${location_Java_GWT_full_clientInterface}'[ folder].</textDef>
		</property>
		<property name="location_Java_GWT_full_server" text="LOCATION_SERVER" mandatory="false" locationOf="remote" textfieldLabel="The location of the server class">
			<textDef>The server[ class] should be [put to]/[in]/[generated into] '${location_Java_GWT_full_server}' folder.</textDef>
			<textDef>[Please ]put the server[ class] to [the ]'${location_Java_GWT_full_server}'[ folder].</textDef>
		</property>
		<property name="location_Java_GWT_full_ui" text="LOCATION_UI" mandatory="false" locationOf="ui" textfieldLabel="The location of the user interface class">
			<textDef>The [ui]/[user interface]/[gui][ class] should be [put to]/[in]/[generated into] '${location_Java_GWT_full_ui}' folder.</textDef>
			<textDef>[Please ]put the [ui]/[user interface]/[gui][ class] to [the ]'${location_Java_GWT_full_ui}'[ folder].</textDef>
		</property>
		<property name="location_Java_GWT_full_gwtXml" text="LOCATION_GWT_XML" mandatory="false" locationOf="gwtXml" textfieldLabel="The location of the GWT XML file">
			<textDef>The [GWT XML]/[gwt XML]/[GWT XML][ configuration][ file] should be [put to]/[in]/[generated into] '${location_Java_GWT_full_gwtXml}' folder.</textDef>
			<textDef>[Please ]put the [GWT XML]/[gwt XML]/[GWT XML][ configuration][ file] to [the ]'${location_Java_GWT_full_gwtXml}'[ folder].</textDef>
		</property>
	</template>
	
	<template name="Spring_POJO" type="Java">
		<file name="POJO" extension="java" suffix="Bean" path="Java/Spring_POJO/POJO.ftl" additionalArtefactsToBeGenerated="UnitTest"/>
		<file name="context_XML" extension="xml" path="Java/Spring_POJO/context.xml.ftl" suffix="-context"/>

		<property name="location_Java_Spring_POJO_context_XML" text="LOCATION_CONTEXT_XML" 
				mandatory="true" locationOf="context_XML" textfieldLabel="The location of the config">
			<textDef>The[ Spring] context XML[ file] should be [put to]/[in]/[generated into] '${location_Java_Spring_POJO_context_XML}' folder.</textDef>
			<textDef>[Please ]put the[ Spring] context XML[ file] to [the ]'${location_Jlocation_Java_Spring_POJO_context_XMLava_JSR303Validator_configXML}'[ folder].</textDef>
		</property>
		<property name="injected_bean_0" text="INJECTED_BEAN_0" mandatory="false" textfieldLabel="The first bean to be injected">
			<textDef>The[ first] [bean]/[class] to be injected to the [Spring POJO class]/[Spring POJO]/[Spring class]/[POJO class]/[class] is '${injected_bean_0}'.</textDef>
		</property>
		<property name="injected_bean_1" text="INJECTED_BEAN_1" mandatory="false" textfieldLabel="The second bean to be injected">
			<textDef>The second[ bean]/[ class]/[ ] to be injected to the [Spring POJO class]/[Spring POJO]/[Spring class]/[POJO class]/[class] is '${injected_bean_1}'.</textDef>
			<textDef>The second[ bean]/[ class]/[ ] to be injected is '${injected_bean_1}'.</textDef>
			<textDef>The[ first] [bean]/[class] to be injected to the [Spring POJO class]/[Spring POJO]/[Spring class]/[POJO class]/[class] is '${injected_bean_0}' and the second[ one]/[ class]/[ ] is '${injected_bean_1}'.</textDef>
		</property>
		<property name="injected_bean_2" text="INJECTED_BEAN_2" mandatory="false" textfieldLabel="The third bean to be injected">
			<textDef>The third[ bean]/[ class]/[ ] to be injected to the [Spring POJO class]/[Spring POJO]/[Spring class]/[POJO class]/[class] is '${injected_bean_2}'.</textDef>
			<textDef>The third[ bean]/[ class]/[ ] to be injected is '${injected_bean_2}'.</textDef>
			<textDef>The[ first] [bean]/[class] to be injected to the [Spring POJO class]/[Spring POJO]/[Spring class]/[POJO class]/[class] is '${injected_bean_0}', the second[ one]/[ class]/[ ] is '${injected_bean_1}' and the third[ one]/[ class]/[ ] is '${injected_bean_2}'.</textDef>
		</property>
		<property name="method_Java_Spring_POJO" text="METHOD" mandatory="false" textfieldLabel="Method signature">
			<textDef>[Please ]add a method[ to it]: '${method_Java_Spring_POJO}'[.]</textDef>
			<textDef>[Please ]add a method to[ the][ Spring] [component]/[class]: '${method_Java_Spring_POJO}'[.]</textDef>
			<textDef>[A ]method [is ]needed: '${method_Java_Spring_POJO}'.</textDef>
		</property>
	</template>
	
	
	<template name="Facade_with_call_and_validation" type="OSB">
		<file name="WS_PS.ftl" extension="proxy" path="OSB/Facade_with_call_and_validation/WS_PS.ftl" suffix="PS" />
		<file name="WORKFLOW_PS.ftl" extension="proxy" path="OSB/Facade_with_call_and_validation/WORKFLOW_PS.ftl" suffix="PS" 
			extractorClass="com.googlecode.happymarvin.artefactgenerator.extractor.XmlExtractor($proxy_wsdl_path)"/>
		<file name="BS.ftl" extension="biz" path="OSB/Facade_with_call_and_validation/BS.ftl" suffix="BS" />
		
		<property name="proxy_wsdl_path" mandatory="true" text="PROXY_WSDL_PATH" textfieldLabel="The path of the WSDL of the proxy service">
			<textDef>The path of the WSDL[ file] of the proxy[ service][ in the project] is '${proxy_wsdl_path}'[ in the project].</textDef>
			<textDef>The WSDL[ file] of the proxy[ service] can be found in[ the folder] '${proxy_wsdl_path}'[ in the project].</textDef>
		</property>
		<property name="proxy_xsd_path" mandatory="true" text="PROXY_XSD_PATH" textfieldLabel="The path of the XSD of the proxy service" >
			<textDef>The path of the [XSD]/[schema][ file] of the proxy[ service][ in the project] is '${proxy_xsd_path}'[ in the project].</textDef>
			<textDef>The [XSD]/[schema][ file] of the proxy[ service] can be found in[ the folder] '${proxy_xsd_path}'[ in the project].</textDef>
		</property>		
		<property name="location_OSB_Facade_with_call_and_validation_business_service" mandatory="false" text="LOCATION_BUSINESS_SERVICE" textfieldLabel="The location of the business service" >
			<textDef>The business service[ file] should be [put to]/[in]/[generated into] '${location_OSB_Facade_with_call_and_validation_business_service}' folder.</textDef>
			<textDef>[Please ]put the business service[ file] to [the ]'${location_OSB_Facade_with_call_and_validation_business_service}'[ folder].</textDef>
		</property>
		<property name="business_wsdl_path" mandatory="false" text="BUSINESS_WSDL_PATH" textfieldLabel="The path of the WSDL of the business service" >
			<textDef>The path of the WSDL[ file] of the business[ service][ in the project] is '${business_wsdl_path}'[ in the project].</textDef>
			<textDef>The WSDL[ file] of the business[ service] can be found in[ the folder] '${business_wsdl_path}'[ in the project].</textDef>
		</property>
		<property name="business_xsd_path" mandatory="false" text="BUSINESS_XSD_PATH" textfieldLabel="The path of the XSD of the business service" >
			<textDef>The path of the [XSD]/[schema][ file] of the business[ service][ in the project] is '${business_xsd_path}'[ in the project].</textDef>
			<textDef>The [XSD]/[schema][ file] of the business[ service] can be found in[ the folder] '${business_xsd_path}'[ in the project].</textDef>
		</property>
		<property name="xquery_path" mandatory="false" text="XQUERY_PATH" textfieldLabel="The path of the xquery (for calling ext. service)" >
			<textDef>The path of the xquery[ file][ in the project] is '${xquery_path}'[ in the project].</textDef>
			<textDef>The xquery[ file] can be found in[ the folder] '${xquery_path}'[ in the project].</textDef>
		</property>
		
		<extractedProperty name="port_name" where="/definitions/service/port/@name" />
		<extractedProperty name="port_namespace" where="/definitions/@ns" />
		<extractedProperty name="request_root_element" where="/definitions/message[ends-with(text(),'Request')]/part/@element" />
	</template>

	<template name="Simple_with_call_and_validation" type="OSB">
		<file name="WS_PS.ftl" extension="proxy" path="OSB/Simple_with_call_and_validation/WS_PS.ftl" suffix="PS" 
			extractorClass="com.googlecode.happymarvin.artefactgenerator.extractor.XmlExtractor($proxy_wsdl_path)" />
		<file name="BS.ftl" extension="biz" path="OSB/Simple_with_call_and_validation/BS.ftl" suffix="BS" />
		
		<property name="proxy_wsdl_path" mandatory="true" text="PROXY_WSDL_PATH" textfieldLabel="The path of the WSDL of the proxy service">
			<textDef>The path of the WSDL[ file] of the proxy[ service][ in the project] is '${proxy_wsdl_path}'[ in the project].</textDef>
			<textDef>The WSDL[ file] of the proxy[ service] can be found in[ the folder] '${proxy_wsdl_path}'[ in the project].</textDef>
		</property>
		<property name="proxy_xsd_path" mandatory="true" text="PROXY_XSD_PATH" textfieldLabel="The path of the XSD of the proxy service" >
			<textDef>The path of the [XSD]/[schema][ file] of the proxy[ service][ in the project] is '${proxy_xsd_path}'[ in the project].</textDef>
			<textDef>The [XSD]/[schema][ file] of the proxy[ service] can be found in[ the folder] '${proxy_xsd_path}'[ in the project].</textDef>
		</property>		
		<property name="location_OSB_Facade_with_call_and_validation_business_service" mandatory="false" text="LOCATION_BUSINESS_SERVICE" textfieldLabel="The location of the business service" >
			<textDef>The business service[ file] should be [put to]/[in]/[generated into] '${location_OSB_Facade_with_call_and_validation_business_service}' folder.</textDef>
			<textDef>[Please ]put the business service[ file] to [the ]'${location_OSB_Facade_with_call_and_validation_business_service}'[ folder].</textDef>
		</property>
		<property name="business_wsdl_path" mandatory="false" text="BUSINESS_WSDL_PATH" textfieldLabel="The path of the WSDL of the business service" >
			<textDef>The path of the WSDL[ file] of the business[ service][ in the project] is '${business_wsdl_path}'[ in the project].</textDef>
			<textDef>The WSDL[ file] of the business[ service] can be found in[ the folder] '${business_wsdl_path}'[ in the project].</textDef>
		</property>
		<property name="business_xsd_path" mandatory="false" text="BUSINESS_XSD_PATH" textfieldLabel="The path of the XSD of the business service" >
			<textDef>The path of the [XSD]/[schema][ file] of the business[ service][ in the project] is '${business_xsd_path}'[ in the project].</textDef>
			<textDef>The [XSD]/[schema][ file] of the business[ service] can be found in[ the folder] '${business_xsd_path}'[ in the project].</textDef>
		</property>
		<property name="xquery_path" mandatory="false" text="XQUERY_PATH" textfieldLabel="The path of the xquery (for calling ext. service)" >
			<textDef>The path of the xquery[ file][ in the project] is '${xquery_path}'[ in the project].</textDef>
			<textDef>The xquery[ file] can be found in[ the folder] '${xquery_path}'[ in the project].</textDef>
		</property>
		
		<extractedProperty name="port_name" where="/definitions/service/port/@name" />
		<extractedProperty name="port_namespace" where="/definitions/@ns" />
		<extractedProperty name="request_root_element" where="/definitions/message[ends-with(text(),'Request')]/part/@element" />
	</template>

</templates>