<templates>

	<template name="POJO" type="Java">
		<!-- additionalArtefactsToBeGenerated: after generating the POJO class the generator will look at the artefactsToBeGenerated and it realizes that a UnitTest should be generated => 
		        it tries to find a template names POJO_UnitTest.ftl -->
		<file extension="java" path="Java/POJO/class.ftl" additionalArtefactsToBeGenerated="UnitTest"/>
		<property name="method_Java_POJO" text="METHOD" mandatory="true">
			<!-- The [] means that the word is not mandatory -->
			<!-- not case-sensitive: add or Add -->
			<textDef>[Please ]add a method[ to it]: '${method_Java_POJO}'[.]</textDef>
			<textDef>[Please ]add a method to[ the] [component]/[class]: '${method_Java_POJO}'[.]</textDef>
			<textDef>[A ]method [is ]needed: '${method_Java_POJO}'.</textDef>
		</property>
	</template>

	
	<template name="JSR303Validator" type="Java">
		<file name="validator" extension="java" path="Java/JSR303Validator/validator.ftl" suffix="Validator" additionalArtefactsToBeGenerated="UnitTest"/>
		<file name="constraint" extension="java" path="Java/JSR303Validator/constraint.ftl" suffix="Constraint"/>
		<file name="configXML" extension="xml" path="Java/JSR303Validator/configXML.ftl"/>
		<!-- the text attribute of the property is used when the instructions are defined in JIRA description as key-value pairs -->
		<property name="location_Java_JSR303Validator_Validator" text="LOCATION_JAVA_JSR303VALIDATOR_VALIDATOR" 
				mandatory="false" locationOf="validator" textfieldLabel="The location of validator">
			<textDef>The [JSR303 ]validator[ class] should be [put to]/[in]/[generated into] '${location_Java_JSR303Validator_Validator}' folder.</textDef>
			<textDef>[Please ]put the [JSR303 ]validator[ class] to [the ]'${location_Java_JSR303Validator_Validator}'[ folder], the [JSR303 ]constraint[ class] to [the ]'${location_Java_JSR303Validator_Constraint}'[ folder] and the [JSR303 ][config]/[configuration] XML[ file] to [the ]'${location_Java_JSR303Validator_configXML}'[ folder].</textDef>
			<textDef>[Please ]put the [JSR303 ]validator[ class] to [the ]'${location_Java_JSR303Validator_Validator}'[ folder].</textDef>
		</property>
		<property name="location_Java_JSR303Validator_Constraint" text="LOCATION_JAVA_JSR303VALIDATOR_CONSTRAINT" 
				mandatory="false" locationOf="constraint" textfieldLabel="The location of constraint">
			<textDef>The [JSR303 ]constraint[ class] should be [put to]/[in]/[generated into] '${location_Java_JSR303Validator_Constraint}' folder.</textDef>
			<textDef>[Please ]put the [JSR303 ]constraint class to [the ]'${location_Java_JSR303Validator_Constraint}'[ folder].</textDef>
		</property>
		<property name="location_Java_JSR303Validator_configXML" text="LOCATION_JAVA_JSR303VALIDATOR_CONFIGXML" 
				mandatory="false" locationOf="configXML" textfieldLabel="The location of config XML">
			<textDef>The [JSR303 ][config]/[configuration] XML[ file] should be [put to]/[in]/[generated into] '${location_Java_JSR303Validator_configXML}' folder.</textDef>
			<textDef>[Please ]put the [JSR303 ][config]/[configuration] XML[ file] to [the ]'${location_Java_JSR303Validator_configXML}'[ folder].</textDef>
		</property>
	</template>


	<template name="stateless-EJB" type="Java">
		<file name="stateless" extension="java" path="Java/stateless-EJB/stateless.ftl" suffix="ServiceBean" additionalArtefactsToBeGenerated="UnitTest"/>
		<file name="local" extension="java" path="Java/stateless-EJB/local.ftl" suffix="ServiceLocal"/>
		<file name="remote" extension="java" path="Java/stateless-EJB/remote.ftl" suffix="ServiceRemote"/>
		<property name="location_Java_stateless-EJB_stateless" text="LOCATION_JAVA_stateless-EJB_STATELESS" 
				mandatory="false" locationOf="stateless" textfieldLabel="The location of the stateless bean">
			<textDef>The stateless [bean]/[class] should be [put to]/[in]/[generated into] '${location_Java_stateless-EJB_stateless}' folder.</textDef>
			<textDef>[Please ]put the stateless [bean]/[class] to [the ]'${location_Java_stateless-EJB_stateless}'[ folder].</textDef>
			<textDef>[Please ]put the stateless [bean]/[class] to [the ]'${location_Java_stateless-EJB_stateless}'[ folder], the local interface[ class] to [the ]'${location_Java_stateless-EJB_local}'[ folder] and the remote [interface]/[component][ class] to [the ]'${location_Java_stateless-EJB_remote}'[ folder].</textDef>
		</property>
		<property name="location_Java_stateless-EJB_local" text="LOCATION_JAVA_stateless-EJB_LOCAL" 
				mandatory="false" locationOf="local" textfieldLabel="The location of the local interface">
			<textDef>The local interface[ class] should be [put to]/[in]/[generated into] '${location_Java_stateless-EJB_local}' folder.</textDef>
			<textDef>[Please ]put the local [interface]/[component][ class] to [the ]'${location_Java_stateless-EJB_local}'[ folder].</textDef>
		</property>
		<property name="location_Java_stateless-EJB_remote" text="LOCATION_JAVA_stateless-EJB_REMOTE" 
				mandatory="false" locationOf="remote" textfieldLabel="The location of the remote interface">
			<textDef>The remote interface[ class] should be [put to]/[in]/[generated into] '${location_Java_stateless-EJB_remote}' folder.</textDef>
			<textDef>[Please ]put the remote [interface]/[component][ class] to [the ]'${location_Java_stateless-EJB_remote}'[ folder].</textDef>
		</property>
	</template>
	
	
	<template name="GWT-server" type="Java">
		<file name="clientAsyncInterface" extension="java" path="Java/GWT-server/clientAsyncInterface.ftl" suffix="ServiceAsync"/>
		<file name="clientInterface" extension="java" path="Java/GWT-server/clientAsyncInterface.ftl" suffix="Service"/>
		<file name="server" extension="java" path="Java/GWT-server/server.ftl" suffix="ServiceImpl" additionalArtefactsToBeGenerated="UnitTest"/>
		<property name="method_Java_GWT-server" text="METHOD" mandatory="true">
			<!-- The [] means that the word is not mandatory -->
			<!-- not case-sensitive: add or Add -->
			<textDef>[Please ]add a method[ to it]: '${method_Java_GWT-server}'[.]</textDef>
			<textDef>[Please ]add a method to[ the] [component]/[class]/[server]/[server class]/[interface]: '${method_Java_GWT-server}'[.]</textDef>
			<textDef>[A ]method [is ]needed: '${method_Java_GWT-server}'.</textDef>
		</property>
		<property name="location_Java_GWT-server_clientAsyncInterface" text="LOCATION_CLIENT_ASYNC_INTERFACE" 
				mandatory="false" locationOf="clientAsyncInterface" textfieldLabel="The location of the client async interface">
			<textDef>The[ client] [async]/[asynchronous] interface[ class] should be [put to]/[in]/[generated into] '${location_Java_GWT-server_clientAsyncInterface}' folder.</textDef>
			<textDef>[Please ]put the[ client] [async]/[asynchronous] interface[ class] to [the ]'${location_Java_GWT-server_clientAsyncInterface}'[ folder].</textDef>
			<textDef>[Please ]put the[ client] [async]/[asynchronous] interface to [the ]'${location_Java_GWT-server_clientAsyncInterface}'[ folder], the client interface[ class] to [the ]'${location_Java_GWT-server_clientInterface}'[ folder] and the server[ class] to [the ]'${location_Java_GWT-server_server}'[ folder].</textDef>
		</property>
		<property name="location_Java_GWT-server_clientInterface" text="LOCATION_SERVER_CLIENT_INTERFACE" 
				mandatory="false" locationOf="clientInterface" textfieldLabel="The location of the client interface">
			<textDef>The client interface[ class] should be [put to]/[in]/[generated into] '${location_Java_GWT-server_clientInterface}' folder.</textDef>
			<textDef>[Please ]put the client interface[ class] to [the ]'${location_Java_GWT-server_clientInterface}'[ folder].</textDef>
		</property>
		<property name="location_Java_GWT-server_server" text="LOCATION_SERVER" mandatory="false" locationOf="remote" textfieldLabel="The location of the server class">
			<textDef>The server[ class] should be [put to]/[in]/[generated into] '${location_Java_GWT-server_server}' folder.</textDef>
			<textDef>[Please ]put the server[ class] to [the ]'${location_Java_GWT-server_server}'[ folder].</textDef>
		</property>
	</template>


	<template name="GWT-full" type="Java">
		<file name="clientAsyncInterface" extension="java" path="Java/GWT-full/clientAsyncInterface.ftl" suffix="ServiceAsync"/>
		<file name="clientInterface" extension="java" path="Java/GWT-full/clientAsyncInterface.ftl" suffix="Service"/>
		<file name="server" extension="java" path="Java/GWT-full/server.ftl" suffix="ServiceImpl" additionalArtefactsToBeGenerated="UnitTest"/>
		<file name="ui" extension="java" path="Java/GWT-full/ui.ftl" suffix="Entry" additionalArtefactsToBeGenerated="UnitTest"/>
		<file name="gwtXml" extension="xml" path="Java/GWT-full/gwt.xml.ftl" suffix=".gwt"/>
		<property name="method_Java_GWT-full" text="METHOD" mandatory="true">
			<!-- The [] means that the word is not mandatory -->
			<!-- not case-sensitive: add or Add -->
			<textDef>[Please ]add a method[ to it]: '${method_Java_GWT-full}'[.]</textDef>
			<textDef>[Please ]add a method to[ the] [component]/[class]/[server]/[server class]/[interface]: '${method_Java_GWT-full}'[.]</textDef>
			<textDef>[A ]method [is ]needed: '${method_Java_GWT-full}'.</textDef>
		</property>
		<property name="location_Java_GWT-full_clientAsyncInterface" text="LOCATION_CLIENT_ASYNC_INTERFACE" 
				mandatory="false" locationOf="clientAsyncInterface" textfieldLabel="The location of the client async interface">
			<textDef>The[ client] [async]/[asynchronous] interface[ class] should be [put to]/[in]/[generated into] '${location_Java_GWT-full_clientAsyncInterface}' folder.</textDef>
			<textDef>[Please ]put the[ client] [async]/[asynchronous] interface[ class] to [the ]'${location_Java_GWT-full_clientAsyncInterface}'[ folder].</textDef>
			<textDef>[Please ]put the[ client] [async]/[asynchronous] interface to [the ]'${location_Java_GWT-full_clientAsyncInterface}'[ folder], the client interface[ class] to [the ]'${location_Java_GWT-full_clientInterface}'[ folder] and the server[ class] to [the ]'${location_Java_GWT-full_server}'[ folder].</textDef>
			<textDef>Also[ please] put the [ui]/[user interface]/[gui][ class] to [the ]'${location_Java_GWT-full_ui}'[ folder] and the [GWT XML]/[gwt XML]/[GWT XML][ configuration][ file] to [the ]'${location_Java_GWT-full_gwtXml}'[ folder].</textDef>
			<textDef>[Please ]put the[ client] [async]/[asynchronous] interface to [the ]'${location_Java_GWT-full_clientAsyncInterface}'[ folder], the client interface[ class] to [the ]'${location_Java_GWT-full_clientInterface}'[ folder], the server[ class] to [the ]'${location_Java_GWT-full_server}'[ folder], the [ui]/[user interface]/[gui][ class] to [the ]'${location_Java_GWT-full_ui}'[ folder] and the [GWT XML]/[gwt XML]/[GWT XML][ configuration][ file] to [the ]'${location_Java_GWT-full_gwtXml}'[ folder].</textDef>
		</property>
		<property name="location_Java_GWT-full_clientInterface" text="LOCATION_SERVER_CLIENT_INTERFACE" 
				mandatory="false" locationOf="clientInterface" textfieldLabel="The location of the client interface">
			<textDef>The client interface[ class] should be [put to]/[in]/[generated into] '${location_Java_GWT-full_clientInterface}' folder.</textDef>
			<textDef>[Please ]put the client interface[ class] to [the ]'${location_Java_GWT-full_clientInterface}'[ folder].</textDef>
		</property>
		<property name="location_Java_GWT-full_server" text="LOCATION_SERVER" mandatory="false" locationOf="remote" textfieldLabel="The location of the server class">
			<textDef>The server[ class] should be [put to]/[in]/[generated into] '${location_Java_GWT-full_server}' folder.</textDef>
			<textDef>[Please ]put the server[ class] to [the ]'${location_Java_GWT-full_server}'[ folder].</textDef>
		</property>
		<property name="location_Java_GWT-full_ui" text="LOCATION_UI" mandatory="false" locationOf="ui" textfieldLabel="The location of the user interface class">
			<textDef>The [ui]/[user interface]/[gui][ class] should be [put to]/[in]/[generated into] '${location_Java_GWT-full_ui}' folder.</textDef>
			<textDef>[Please ]put the [ui]/[user interface]/[gui][ class] to [the ]'${location_Java_GWT-full_ui}'[ folder].</textDef>
		</property>
		<property name="location_Java_GWT-full_gwtXml" text="LOCATION_GWT_XML" mandatory="false" locationOf="gwtXml" textfieldLabel="The location of the GWT XML file">
			<textDef>The [GWT XML]/[gwt XML]/[GWT XML][ configuration][ file] should be [put to]/[in]/[generated into] '${location_Java_GWT-full_gwtXml}' folder.</textDef>
			<textDef>[Please ]put the [GWT XML]/[gwt XML]/[GWT XML][ configuration][ file] to [the ]'${location_Java_GWT-full_gwtXml}'[ folder].</textDef>
		</property>
	</template>
	
	
	<template name="Spring-POJO" type="Java">
		<file name="class" extension="java" suffix="Bean" path="Java/Spring-POJO/POJO.ftl" additionalArtefactsToBeGenerated="UnitTest"/>
		<file name="context_XML" extension="xml" path="Java/Spring-POJO/context.xml.ftl" suffix="-context"/>

		<property name="location_Java_Spring-POJO_context_XML" text="LOCATION_CONTEXT_XML" mandatory="true" locationOf="context_XML" textfieldLabel="The location of the config">
			<textDef>The[ Spring] context XML[ file] should be [put to]/[in]/[generated into] '${location_Java_Spring-POJO_context_XML}' folder.</textDef>
			<textDef>[Please ]put the[ Spring] context XML[ file] to [the ]'${location_Jlocation_Java_Spring-POJO_context_XMLava_JSR303Validator_configXML}'[ folder].</textDef>
		</property>
		<property name="injected_bean_0" text="INJECTED_BEAN_0" mandatory="false" textfieldLabel="The first bean to be injected">
			<textDef>The[ first] [bean]/[class] to be injected to the [Spring POJO class]/[Spring POJO]/[Spring class]/[POJO class]/[class] is '${injected_bean_0}'.</textDef>
		</property>
		<property name="injected_bean_1" text="INJECTED_BEAN_1" mandatory="false" textfieldLabel="The second bean to be injected">
			<textDef>The second[ bean]/[ class]/[ ] to be injected to the [Spring POJO class]/[Spring POJO]/[Spring class]/[POJO class]/[class] is '${injected_bean_1}'.</textDef>
			<textDef>The second[ bean]/[ class]/[ ] to be injected is '${injected_bean_1}'.</textDef>
			<textDef>The[ first] [bean]/[class] to be injected to the [Spring POJO class]/[Spring POJO]/[Spring class]/[POJO class]/[class] is '${injected_bean_0}' and the second[ one]/[ class]/[ ] is '${injected_bean_1}'.</textDef>
		</property>
		<property name="injected_bean_2" text="INJECTED_BEAN_2" mandatory="false" textfieldLabel="The third bean to be injected">
			<textDef>The third[ bean]/[ class]/[ ] to be injected to the [Spring POJO class]/[Spring POJO]/[Spring class]/[POJO class]/[class] is '${injected_bean_2}'.</textDef>
			<textDef>The third[ bean]/[ class]/[ ] to be injected is '${injected_bean_2}'.</textDef>
			<textDef>The[ first] [bean]/[class] to be injected to the [Spring POJO class]/[Spring POJO]/[Spring class]/[POJO class]/[class] is '${injected_bean_0}', the second[ one]/[ class]/[ ] is '${injected_bean_1}' and the third[ one]/[ class]/[ ] is '${injected_bean_2}'.</textDef>
		</property>
		<property name="method_Java_Spring-POJO" text="METHOD" mandatory="false" textfieldLabel="Method signature">
			<textDef>[Please ]add a method[ to it]: '${method_Java_Spring-POJO}'[.]</textDef>
			<textDef>[Please ]add a method to[ the][ Spring] [component]/[class]: '${method_Java_Spring-POJO}'[.]</textDef>
			<textDef>[A ]method [is ]needed: '${method_Java_Spring-POJO}'.</textDef>
		</property>
	</template>
	
	
	<template name="Proxy_with_facade" type="OSB">
		<file name="WS_PS" extension="proxy" path="OSB/Proxy_with_facade/WS_PS.ftl" suffix="PS" />
		<file name="WORKFLOW_PS" extension="proxy" path="OSB/Proxy_with_facade/WORKFLOW_PS.ftl" suffix="PS" 
			extractorClass="com.googlecode.happymarvin.artefactgenerator.extractor.XmlExtractor"/>
		<file name="BS" extension="biz" path="OSB/Proxy_with_facade/BS.ftl" suffix="BS" />
		
		<property name="proxy_wsdl_path" mandatory="true" text="PROXY_WSDL_PATH" textfieldLabel="The path of the WSDL of the proxy service">
			<textDef>The path of the WSDL[ file] of the proxy[ service][ in the project] is '${proxy_wsdl_path}'[ in the project].</textDef>
			<textDef>The WSDL[ file] of the proxy[ service] can be found in[ the folder] '${proxy_wsdl_path}'[ in the project].</textDef>
		</property>
		<property name="proxy_xsd_path" mandatory="true" text="PROXY_XSD_PATH" textfieldLabel="The path of the XSD of the proxy service" >
			<textDef>The path of the [XSD]/[schema][ file] of the proxy[ service][ in the project] is '${proxy_xsd_path}'[ in the project].</textDef>
			<textDef>The [XSD]/[schema][ file] of the proxy[ service] can be found in[ the folder] '${proxy_xsd_path}'[ in the project].</textDef>
		</property>		
		<property name="location_OSB_Proxy_with_facade_business_service" mandatory="false" text="LOCATION_BUSINESS_SERVICE" locationOf="BS"
				textfieldLabel="The location of the business service" >
			<textDef>The business service[ file] should be [put to]/[in]/[generated into] '${location_OSB_Proxy_with_facade_business_service}' folder.</textDef>
			<textDef>[Please ]put the business service[ file] to [the ]'${location_OSB_Proxy_with_facade_business_service}'[ folder].</textDef>
		</property>
		<property name="business_wsdl_path" mandatory="false" text="BUSINESS_WSDL_PATH" textfieldLabel="The path of the WSDL of the business service" >
			<textDef>The path of the WSDL[ file] of the business[ service][ in the project] is '${business_wsdl_path}'[ in the project].</textDef>
			<textDef>The WSDL[ file] of the business[ service] can be found in[ the folder] '${business_wsdl_path}'[ in the project].</textDef>
		</property>
		<property name="business_xsd_path" mandatory="false" text="BUSINESS_XSD_PATH" textfieldLabel="The path of the XSD of the business service" >
			<textDef>The path of the [XSD]/[schema][ file] of the business[ service][ in the project] is '${business_xsd_path}'[ in the project].</textDef>
			<textDef>The [XSD]/[schema][ file] of the business[ service] can be found in[ the folder] '${business_xsd_path}'[ in the project].</textDef>
		</property>
		<property name="xquery_path" mandatory="false" text="XQUERY_PATH" textfieldLabel="The path of the XQuery (for calling ext. service)" >
			<textDef>The path of the [xquery]/[XQuery][ file][ in the project] is '${xquery_path}'[ in the project].</textDef>
			<textDef>The [xquery]/[XQuery][ file] can be found in[ the folder] '${xquery_path}'[ in the project].</textDef>
		</property>
		
		<extractedProperty name="port_name" where="/definitions/service/port/@name" from="proxy_wsdl_path" />
		<extractedProperty name="port_namespace" where="/definitions/@ns" from="proxy_wsdl_path"/>
		<extractedProperty name="request_root_element" where="/definitions/message[ends-with(text(),'Request')]/part/@element" from="proxy_wsdl_path"/>
	</template>


	<template name="Proxy" type="OSB">
		<file name="WS_PS" extension="proxy" path="OSB/Proxy/WS_PS.ftl" suffix="PS" 
			extractorClass="com.googlecode.happymarvin.artefactgenerator.extractor.XmlExtractor" />
		<file name="BS" extension="biz" path="OSB/Proxy/BS.ftl" suffix="BS" />
		
		<property name="proxy_wsdl_path" mandatory="true" text="PROXY_WSDL_PATH" textfieldLabel="The path of the WSDL of the proxy service">
			<textDef>The path of the WSDL[ file] of the proxy[ service][ in the project] is '${proxy_wsdl_path}'[ in the project].</textDef>
			<textDef>The WSDL[ file] of the proxy[ service] can be found in[ the folder] '${proxy_wsdl_path}'[ in the project].</textDef>
		</property>
		<property name="proxy_xsd_path" mandatory="true" text="PROXY_XSD_PATH" textfieldLabel="The path of the XSD of the proxy service" >
			<textDef>The path of the [XSD]/[schema][ file] of the proxy[ service][ in the project] is '${proxy_xsd_path}'[ in the project].</textDef>
			<textDef>The [XSD]/[schema][ file] of the proxy[ service] can be found in[ the folder] '${proxy_xsd_path}'[ in the project].</textDef>
		</property>		
		<property name="location_OSB_Proxy_business_service" mandatory="false" text="LOCATION_BUSINESS_SERVICE" locationOf="BS"
				textfieldLabel="The location of the business service" >
			<textDef>The business service[ file] should be [put to]/[in]/[generated into] '${location_OSB_Proxy_business_service}' folder.</textDef>
			<textDef>[Please ]put the business service[ file] to [the ]'${location_OSB_Proxy_business_service}'[ folder].</textDef>
		</property>
		<property name="business_wsdl_path" mandatory="false" text="BUSINESS_WSDL_PATH" textfieldLabel="The path of the WSDL of the business service" >
			<textDef>The path of the WSDL[ file] of the business[ service][ in the project] is '${business_wsdl_path}'[ in the project].</textDef>
			<textDef>The WSDL[ file] of the business[ service] can be found in[ the folder] '${business_wsdl_path}'[ in the project].</textDef>
		</property>
		<property name="business_xsd_path" mandatory="false" text="BUSINESS_XSD_PATH" textfieldLabel="The path of the XSD of the business service" >
			<textDef>The path of the [XSD]/[schema][ file] of the business[ service][ in the project] is '${business_xsd_path}'[ in the project].</textDef>
			<textDef>The [XSD]/[schema][ file] of the business[ service] can be found in[ the folder] '${business_xsd_path}'[ in the project].</textDef>
		</property>
		<property name="xquery_path" mandatory="false" text="XQUERY_PATH" textfieldLabel="The path of the XQuery (for calling ext. service)" >
			<textDef>The path of the [xquery]/[XQuery][ file][ in the project] is '${xquery_path}'[ in the project].</textDef>
			<textDef>The [xquery]/[XQuery][ file] can be found in[ the folder] '${xquery_path}'[ in the project].</textDef>
		</property>
		
		<extractedProperty name="port_name" where="/definitions/service/port/@name" from="proxy_wsdl_path"/>
		<extractedProperty name="port_namespace" where="/definitions/@ns" from="proxy_wsdl_path"/>
		<extractedProperty name="request_root_element" where="/definitions/message[ends-with(text(),'Request')]/part/@element" from="proxy_wsdl_path" />
	</template>

	<template name="Struts" type="Java">
		<file name="action-class" extension="java" path="Java/Struts/action-class.ftl" suffix="Action"/>
		<file name="jsp" extension="jsp" path="Java/Struts/jsp.ftl" suffix="-edit"/>
		<file name="config-xml" extension="xml" path="Java/Struts/config-xml.ftl" suffix="-struts"/>

		<property name="location_Java_Struts_jsp" mandatory="false" text="LOCATION_JSP" textfieldLabel="The location of the jsp file" locationOf="jsp">
			<textDef>The [jsp]/[JSP][ file] should be [put to]/[in]/[generated into] '${location_Java_Struts_jsp}' folder.</textDef>
			<textDef>[Please ]put the [jsp]/[JSP][ file] to [the ]'${location_Java_Struts_jsp}'[ folder].</textDef>
		</property>
		<property name="location_Java_Struts_config-xml" mandatory="false" text="LOCATION_CONFIG_XML" textfieldLabel="The location of the Struts config file" locationOf="config-xml">
			<textDef>The [jsp]/[JSP][ file] should be [put to]/[in]/[generated into] '${location_Java_Struts_config-xml}' folder.</textDef>
			<textDef>[Please ]put the [jsp]/[JSP][ file] to [the ]'${location_Java_Struts_config-xml}'[ folder].</textDef>
		</property>
	</template>


	<template name="Simple" type="Oracle-BPEL">
		<file name="WS_PS" extension="proxy" path="OSB/Proxy/WS_PS.ftl" suffix="PS" 
			extractorClass="com.googlecode.happymarvin.artefactgenerator.extractor.XmlExtractor" />
		<file name="BS" extension="biz" path="OSB/Proxy/BS.ftl" suffix="BS" />
		
		<property name="bpel_wsdl_path" mandatory="true" text="BPEL_WSDL_PATH" textfieldLabel="The path of the WSDL of the BPEL process">
			<textDef>The path of the BPEL[ process] WSDL[ file][ in the project] is '${bpel_wsdl_path}'[ in the project].</textDef>
			<textDef>The path of the WSDL[ file] of the BPEL[ process][ in the project] is '${bpel_wsdl_path}'[ in the project].</textDef>
			<textDef>The BPEL[ process] WSDL[ file] can be found in[ the folder] '${bpel_wsdl_path}'[ in the project].</textDef>
			<textDef>The WSDL[ file] of the BPEL[ process] can be found in[ the folder] '${bpel_wsdl_path}'[ in the project].</textDef>
		</property>
		<property name="bpel_xsd_path" mandatory="true" text="BPEL_XSD_PATH" textfieldLabel="The path of the XSD of the BPEL process">
			<textDef>The path of the BPEL[ process] [XSD]/[schema][ file][ in the project] is '${bpel_xsd_path}'[ in the project].</textDef>
			<textDef>The path of the [XSD]/[schema][ file] of the BPEL[ process][ in the project] is '${bpel_xsd_path}'[ in the project].</textDef>
			<textDef>The BPEL[ process] [XSD]/[schema][ file] can be found in[ the folder] '${bpel_xsd_path}'[ in the project].</textDef>
			<textDef>The [XSD]/[schema][ file] of the BPEL[ process] can be found in[ the folder] '${bpel_xsd_path}'[ in the project].</textDef>
		</property>
		<property name="pl_wsdl_path" mandatory="true" text="PL_WSDL_PATH" textfieldLabel="The path of the WSDL of the partner link">
			<textDef>The path of the [partner link]/[external service]/[third party] WSDL[ file][ in the project] is '${pl_wsdl_path}'[ in the project].</textDef>
			<textDef>The path of the WSDL[ file] of the [partner link]/[external service]/[third party][ in the project] is '${pl_wsdl_path}'[ in the project].</textDef>
			<textDef>The [partner link]/[external service]/[third party] WSDL[ file] can be found in[ the folder] '${pl_wsdl_path}'[ in the project].</textDef>
			<textDef>The WSDL[ file] of the [partner link]/[external service]/[third party] can be found in[ the folder] '${pl_wsdl_path}'[ in the project].</textDef>
		</property>
		<property name="pl_xsd_path" mandatory="true" text="PL_XSD_PATH" textfieldLabel="The path of the XSD of the partner link">
			<textDef>The path of the [partner link]/[external service]/[third party] [XSD]/[schema][ file][ in the project] is '${pl_xsd_path}'[ in the project].</textDef>
			<textDef>The path of the [XSD]/[schema][ file] of the [partner link]/[external service]/[third party][ in the project] is '${pl_xsd_path}'[ in the project].</textDef>
			<textDef>The [partner link]/[external service]/[third party] [XSD]/[schema][ file] can be found in[ the folder] '${pl_xsd_path}'[ in the project].</textDef>
			<textDef>The [XSD]/[schema][ file] of the [partner link]/[external service]/[third party] can be found in[ the folder] '${pl_xsd_path}'[ in the project].</textDef>
		</property>

		<extractedProperty name="pl_namespace" where="/definitions/@targetNamespace" from="pl_wsdl_path" />
		<extractedProperty name="bpel_namespace" where="/definitions/@targetNamespace" from="bpel_wsdl_path" />
		<extractedProperty name="bpel_port_type" where="/wsdl:definitions/wsdl:portType/@name" from="bpel_wsdl_path" />
		<extractedProperty name="bpel_port" where="/wsdl:definitions/wsdl:service/wsdl:port/@name" from="bpel_wsdl_path" />
		<extractedProperty name="pl_name" where="/definitions/service/@name" from="pl_wsdl_path" />
		<extractedProperty name="pl_port_type" where="/wsdl:definitions/wsdl:portType/@name" from="pl_wsdl_path" />
		<extractedProperty name="pl_port" where="/wsdl:definitions/wsdl:service/wsdl:port/@name" from="pl_wsdl_path" />
		<extractedProperty name="pl_namespace" where="/definitions/@targetNamespace" from="pl_wsdl_path" />
		<extractedProperty name="bpel_xsd_namespace" where="/schema/@targetNamespace" from="bpel_xsd_path" />
		<extractedProperty name="pl_xsd_namespace" where="/schema/@targetNamespace" from="pl_xsd_path" />
		<extractedProperty name="pl_partnerLinkType" where="/definitions/plnk:partnerLinkType[0]/@name" from="pl_wsdl_path" />
		<extractedProperty name="pl_partnerRoleType" where="/definitions/plnk:partnerLinkType[0]/plnk:role/@name" from="pl_wsdl_path" />
		<extractedProperty name="bpel_partnerLinkType" where="/definitions/plnk:partnerLinkType[0]/@name" from="bpel_wsdl_path" />
		<extractedProperty name="bpel_partnerRoleType" where="/definitions/plnk:partnerLinkType[0]/plnk:role/@name" from="bpel_wsdl_path" />
		<extractedProperty name="bpel_operation" where="/definitions/bindings/operation[0]/@name" from="bpel_wsdl_path" />
		<extractedProperty name="pl_operation" where="/definitions/bindings/operation[0]/@name" from="pl_wsdl_path" />
		<extractedProperty name="bpel_request_messageType" where="/definitions/message[ends-with(text(),'Request')]/@name" from="bpel_wsdl_path" />
		<extractedProperty name="bpel_response_messageType" where="/definitions/message[ends-with(text(),'Response')]/@name" from="bpel_wsdl_path" />
		<extractedProperty name="pl_request_messageType" where="/definitions/message[ends-with(text(),'Request')]/@name" from="pl_wsdl_path" />
		<extractedProperty name="pl_response_messageType" where="/definitions/message[ends-with(text(),'Response')]/@name" from="pl_wsdl_path" />

<!-- 	- extractedProperty.pl_namespace : partner link namespace: mandatory=false -->
<!-- 		http://virginmedia/wsdl/UpdateCableInventory/1/0 -->
<!-- 		mockUpdateCableInventoryBinding.wsdl -> /definitions/@targetNamespace -->
<!-- 	- extractedProperty.bpel_namespace -->
<!-- 		http://virginmedia/wsdl/NotifyInventoryChange/0/1 -->
<!-- 		WSDL_NotifyInventoryChange.wsdl -> /definitions/@targetNamespace -->
<!-- 	- extractedProperty.bpel_port_type -->
<!-- 		VirginMediaPortType -->
<!-- 		WSDL_NotifyInventoryChange.wsdl -> /wsdl:definitions/wsdl:portType/@name -->
<!-- 	- extractedProperty.bpel_port -->
<!-- 		VirginMediaPort -->
<!-- 		WSDL_NotifyInventoryChange.wsdl -> /wsdl:definitions/wsdl:service/wsdl:port/@name -->
<!-- 	- extractedProperty.pl_name: partner link name -->
<!-- 		UpdateCableInventory -->
<!-- 		mockUpdateCableInventoryBinding.wsdl -> /definitions/service/@name -->
<!-- 	- extractedProperty.pl_port_type -->
<!-- 		VirginMediaPortType -->
<!-- 		mockUpdateCableInventoryBinding.wsdl ->  -> /wsdl:definitions/wsdl:portType/@name -->
<!-- 	- extractedProperty.pl_port -->
<!-- 		VirginMedia -->
<!-- 		mockUpdateCableInventoryBinding.wsdl -> /wsdl:definitions/wsdl:service/wsdl:port/@name -->
<!-- 	- extractedProperty.pl_namespace -->
<!-- 		http://virginmedia/wsdl/UpdateCableInventory/1/0 -->
<!-- 		mockUpdateCableInventoryBinding.wsdl -> /definitions/@targetNamespace -->
<!-- 	- extractedProperty.bpel_xsd_namespace -->
<!-- 		http://virginmedia/schema/NotifyInventoryChange -->
<!-- 		NotifyInventoryChange.xsd -> /schema/@targetNamespace -->
<!-- 	- extractedProperty.pl_xsd_namespace -->
<!-- 		http://virginmedia/schema/UpdateCableInventory -->
<!-- 		mockUpdateCableInventoryBinding.xsd -> /schema/@targetNamespace -->
<!-- 	- extractedProperty.pl_partnerLinkType -->
<!-- 		WSDL_UpdateCableInventory -->
<!-- 		mockUpdateCableInventoryBinding.wsdl -> /definitions/plnk:partnerLinkType[0]/@name -->
<!-- 	- extractedProperty.pl_partnerRoleType -->
<!-- 		VirginMediaPortTypeRole -->
<!-- 		mockUpdateCableInventoryBinding.wsdl -> /definitions/plnk:partnerLinkType[0]/plnk:role/@name -->
<!-- 	- extractedProperty.bpel_partnerLinkType -->
<!-- 		wsdlNotifyInventoryChange -->
<!-- 		WSDL_NotifyInventoryChange.wsdl -> /definitions/plnk:partnerLinkType[0]/@name -->
<!-- 	- extractedProperty.bpel_partnerRoleType -->
<!-- 		VirginMediaPortTypeRole -->
<!-- 		WSDL_NotifyInventoryChange.wsdl -> /definitions/plnk:partnerLinkType[0]/plnk:role/@name -->
<!-- 	- extractedProperty.bpel_operation -->
<!-- 		ProcessAdjustment -->
<!-- 		WSDL_NotifyInventoryChange.wsdl -> /definitions/bindings/operation[0]/@name -->
<!-- 	- extractedProperty.pl_operation -->
<!-- 		ProcessAdjustment -->
<!-- 		mockUpdateCableInventoryBinding.wsdl -> /definitions/bindings/operation[0]/@name -->
<!-- 	- extractedProperty.bpel_request_messageType -->
<!-- 		ProcessAdjustmentRequest -->
<!-- 		WSDL_NotifyInventoryChange.wsdl -> /definitions/message[ends-with(text(),'Request')]/@name -->
<!-- 	- extractedProperty.bpel_response_messageType -->
<!-- 		ProcessAdjustmentResponse -->
<!-- 		WSDL_NotifyInventoryChange.wsdl -> /definitions/message[ends-with(text(),'Response')]/@name -->
<!-- 	- extractedProperty.pl_request_messageType -->
<!-- 		ProcessAdjustmentRequest -->
<!-- 		mockUpdateCableInventoryBinding.wsdl -> /definitions/message[ends-with(text(),'Request')]/@name -->
<!-- 	- extractedProperty.pl_response_messageType -->
<!-- 		ProcessAdjustmentResponse -->
<!-- 		mockUpdateCableInventoryBinding.wsdl -> /definitions/message[ends-with(text(),'Response')]/@name -->
	</template>


</templates>